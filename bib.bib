
@book{Spivak65,
	author = {Michael Spivak},
	keywords = {calculus, manifolds, math},
	publisher = {Addison-Wesley},
	title = {Calculus on Manifolds: A Modern Approach to Classical Theorems of Advanced Calculus},
	year = 1965
}
% howpublished = {Paperback},
% isbn = 0805390219,
% citeulike-article-id = 2448841,
% month = {March},
% url = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20\&amp;path=ASIN/0805390219},
% posted-at = {2009-01-22 19:01:02},
% priority = {0},

@incollection{Gibbons2002Calculating,
  title = {\href{http://www.cs.ox.ac.uk/people/jeremy.gibbons/publications/acmmpc-calcfp.pdf}{Calculating functional programs}},
  author = "Jeremy Gibbons",
  year = "2002",
  booktitle = "Algebraic and Coalgebraic Methods in the Mathematics of Program Construction",
  Qeditor = "Roland Backhouse and Roy Crole and Jeremy Gibbons",
  issn = "0302-9743",
  Qpages = "148--203",
  publisher = "Springer-Verlag",
  series = "Lecture Notes in Computer Science",
  Qurl = "http://www.cs.ox.ac.uk/people/jeremy.gibbons/publications/acmmpc-calcfp.pdf",
  volume = "2297"
}

@Article{Elliott-2017-compiling-to-categories,
  author    = {Conal Elliott},
  title     = {\href{http://conal.net/papers/compiling-to-categories}{Compiling to categories}},
  journal   = {Proc. ACM Program. Lang.},
  volume    = {1},
  number    = {ICFP},
  articleno = {48},
  numpages  = {24},
  month     = sep,
  year      = {2017},
  Qdoi       = {http://dx.doi.org/10.1145/3110271}
}


@incollection{Lambek:1980:LambdaToCCC
 , author = {Joachim Lambek}
 , title = {From $\lambda$-calculus to cartesian closed categories}
 , year = {1980}
 , editor = {J.P. Seldin and J.R. Hindley}
 , booktitle = {To H.B. Curry: Essays on Combinatory Logic, Lambda Calculus, and Formalism}
 , publisher = {Academic Press}
}

@inproceedings{Lambek:1985:CCC,
 author = {Joachim Lambek},
 title = {Cartesian Closed Categories and Typed Lambda-Calculi},
 booktitle = {\out{Proceedings of the }Thirteenth Spring School of the LITP on Combinators and Functional Programming Languages},
 year = {1986},
 Qisbn = {3-540-17184-3},
 pages = {136--175},
 Qnumpages = {40},
 Qurl = {http://dl.acm.org/citation.cfm?id=645691.665261},
 Qacmid = {665261},
 Qpublisher = {Springer-Verlag},
 Qaddress = {London, UK, UK},
} 

@techreport{Elliott2009-type-class-morphisms-TR,
  author      = {Conal Elliott},
  title       = {\href{http://conal.net/papers/type-class-morphisms}{Denotational design with type class morphisms\out{ (extended version)}}},
  institution = {LambdaPix},
  month       = {March},
  number      = {2009-01},
  year        = 2009
}

@book{BirddeMoor96:Algebra,
  title = {\href{http://www.cs.ox.ac.uk/publications/books/algebra/}{The Algebra of Programming}},
  author = "Richard Bird and Oege de Moor",
  year = "1996",
  Qisbn = "013507245X",
  publisher = "Prentice-Hall",
}

@inproceedings{Hinze00memofunctions,
    author = {Ralf Hinze},
    title = {\href{http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.43.3272}{Memo functions, polytypically!}},
    booktitle = {\out{Proceedings of the }2nd Workshop on Generic Programming},
    year = {2000},
    pages = {17--32}
}

@inproceedings{Magalhaes:2010
 , author = {Magalh\~{a}es, Jos{\'e} Pedro and Dijkstra, Atze and Jeuring, Johan and L\"{o}h, Andres}
 , title = {\href{http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.366.2185}{A generic deriving mechanism for Haskell}}
 , year = {2010}
 , booktitle = {Haskell Symposium}
 , Qbooktitle = {Proceedings of the Third ACM Haskell Symposium on Haskell}
 , pages = {37--48}
 , Qseries = {Haskell '10}
 , Qnumpages = {12}
 , Qisbn = {978-1-4503-0252-4}
 , Qlocation = {Baltimore, Maryland, USA}
 , Qurl = {http://doi.acm.org/10.1145/1863523.1863529}
 , Qdoi = {10.1145/1863523.1863529}
 , Qacmid = {1863529}
 , Qpublisher = {ACM}
 , Qaddress = {New York, NY, USA}
 , Qkeywords = {datatype-generic programming, haskell, type classes}
 }

@misc{HaskellWikiGhcGenerics
 , author = {Jos{\'{e}} Pedro Magalh{\~{a}}es and others}
 , year = {2011}
 , title = {{GHC.Generics}}
 , url = {https://wiki.haskell.org/GHC.Generics}
 , note = "Haskell wiki"
}

@misc{vector-sized
 , title = "vector-sized"
 , author = "Joe Hermaszewski and Ben Gamari"
 , url = {http://github.com/expipiplus1/vector-sized}
 , note = "Haskell library"
 , year = 2017
}

@book{CLRS
  , author    = {Thomas H. Cormen and Charles E. Leiserson and Ronald L. Rivest and Clifford Stein}
  , title     = {Introduction to Algorithms, Third Edition}
  , publisher = {The {MIT} Press and McGraw-Hill Book Company}
  , year      = {2001}
  , Qisbn      = {0-262-03293-7}
  , Qtimestamp = {Thu, 30 Jan 2003 16:30:40 +0100}
  , Qbiburl    = {http://dblp.org/rec/bib/books/mg/CormenLRS01}
  , Qbibsource = {dblp computer science bibliography, http://dblp.org}
}

@TechReport{Hu:Shing:1981
  , author      = {T. C. Hu and M. T. Shing}
  , title       = {Computation of Matrix Chain Products, Part I, Part II}
  , institution = {Stanford University, Department of Computer Science}
  , year        = 1981
  , number      = {STAN-CS-TR-81-875}
}

@article{Naumann2008OptimalJA
  , title={Optimal {Jacobian} accumulation is {NP}-complete}
  , author={Uwe Naumann}
  , Qjournal={Math. Program.}
  , journal={Mathematical Programming}
  , year={2008}
  , volume={112}
  , pages={427-441}
}

@article{Fong2017BackpropAF,
  title={\href{https://arxiv.org/abs/1711.10455}{Backprop as Functor: A compositional perspective on supervised learning}},
  author={Brendan Fong and David I. Spivak and R{\'e}my Tuy{\'e}ras},
  journal={CoRR},
  year={2017},
  volume={abs/1711.10455}
}

@inproceedings{Hinze2012KanEF,
  title = {\href{https://www.cs.ox.ac.uk/ralf.hinze/Kan.pdf}{Kan extensions for program optimisation---\emph{Or:} Art and Dan explain an old trick}},
  author = {Ralf Hinze},
  year = "2012",
  booktitle = "11th International Conference on Mathematics of Program Construction (MPC '12)",
  Qpages = "324-–362",
  Qaffiliation = "University of Oxford, Computing Laboratory, Wolfson Building, Parks Road, Oxford OX1 3QD, England",
  Qeditor = "Gibbons, Jeremy and Nogueira, Pablo",
  Qlocation = "Madrid, Spain",
  Qpublisher = "Springer Berlin / Heidelberg",
  Qseries = "Lecture Notes in Computer Science",
  Qvolume = "7342",
}

@article{MacedoOliveira2013Typing,
title = {\href{http://www.sciencedirect.com/science/article/pii/S0167642312001402}{Typing linear algebra: A biproduct-oriented approach}},
journal = "Science of Computer Programming",
volume = "78",
number = "11",
pages = "2160--2191",
year = "2013",
Qnote = "Special section on Mathematics of Program Construction (MPC 2010) and Special section on methodological development of interactive systems from Interaccion 2011",
Qissn = "0167-6423",
Qdoi = "https://doi.org/10.1016/j.scico.2012.07.012",
author = "Hugo Daniel Macedo and José Nuno Oliveira",
keywords = "Linear algebra, Categories of matrices, Algebra of programming"
}

@InProceedings{Elliott2009-beautiful-differentiation,
  author    = {Conal Elliott},
  title     = {\href{http://conal.net/papers/beautiful-differentiation}{Beautiful differentiation}},
  booktitle = "International Conference on Functional Programming (ICFP)",
  year      = 2009,
}

@book{Lawvere:2009:Conceptual,
 author = {Lawvere, F. William and Schanuel, Stephen H.},
 title = {Conceptual Mathematics: A First Introduction to Categories},
 year = {2009},
 Qisbn = {0521894859, 9780521894852},
 edition = {2nd},
 publisher = {Cambridge University Press},
 Qaddress = {New York, NY, USA},
} 

@book{Awodey2006CT,
  author = {Awodey, Steve},
  publisher = {Oxford University Press},
  series = {Oxford Logic Guides},
  title = {Category theory},
  volume = 49,
  year = 2006
}

@book{MacLane1998categories,
  title={Categories for the Working Mathematician},
  author={Saunders {Mac Lane}},
  series={Graduate Texts in Mathematics},
  Qurl={https://books.google.com/books?id=eBvhyc4z8HQC},
  year={1998},
  publisher={Springer New York}
}

@book{GriewankWalther2008EvalDerivs,
  author = {Griewank, Andreas and Walther, Andrea},
  year = {2008},
  Qmonth = {01},
  title = {Evaluating derivatives. Principles and techniques of algorithmic differentiation},
  edition = {Second},
  publisher = {Society for Industrial and Applied Mathematics},
  Qaddress = {Philadelphia, PA, USA},
  Qisbn = {978-0-89871-659-7}
}

@inproceedings{Griewank89onAD,
    author = {Andreas Griewank},
    title = {On Automatic Differentiation},
    booktitle = {In Mathematical Programming: Recent Developments and Applications},
    year = {1989},
    Qpages = {83--108},
    Qpublisher = {Kluwer Academic Publishers}
}

@incollection{RallCorliss1996IntroAD,
    author = "Louis B. Rall and George F. Corliss",
    editor = "Martin Berz and Christian H. Bischof and George F. Corliss and Andreas Griewank",
    title = "An Introduction to Automatic Differentiation",
    booktitle = "Computational Differentiation: Techniques, Applications, and Tools",
    pages = "1--17",
    abstract = "This paper provides a gentle introduction to the field of automatic differentiation
      (AD), with the goal of equipping the reader for the other papers in this book. AD is the systematic
      application of the familiar rules of calculus to computer programs, yielding programs for the
      propagation of numerical values of first, second, or higher derivatives. AD can be regarded as
      traversing the code list (or computational graph) in the forward mode, the reverse mode, or a
      combination of the two. Algorithms for numerical optimization, differential equations, and interval
      analysis all could use AD technology to compute the required derivatives. AD typically is
      implemented by using either source code transformation or operator overloading. We give examples of
      code for each. Finally, we outline some pitfalls of AD for naive users, and we present opportunities
      for future research.",
    year = "1996"
}

@INCOLLECTION{Griewank2003MathViewAD,
    author = "Andreas Griewank",
    title = "A Mathematical View of Automatic Differentiation",
    booktitle = "Acta Numerica",
    volume = "12",
    year = "2003",
    pages = "321--398",
    publisher = "Cambridge University Press",
    Qdoi = "10.1017/S0962492902000132",
    abstract = "Automatic, or algorithmic, differentiation addresses the need for the accurate and
      efficient calculation of derivative values in scientific computing. To this end procedural programs
      for the evaluation of problem-specific functions are transformed into programs that also compute the
      required derivative values at the same numerical arguments in floating point arithmetic.
      Disregarding many important implementation issues, we examine in this article complexity bounds and
      other more mathematical aspects of the program transformation task sketched above.",
    Qad_theotech = "General"
}

@article{Wengert64,
  author =       "R. E. Wengert",
  title =        "A simple automatic derivative evaluation program",
  journal =      "Communications of the ACM",
  volume =       "7",
  number =       "8",
  year =         "1964",
  pages =        "463 -- 464",
  abstract =     "A procedure for automatic evaluation of total and
                 partial derivatives of arbitrary algebraic functions
                 is presented. The numerical values of derivatives are
                 computed without developing analytic expressions for
                 the derivatives. The function is decomposed into a
                 sequence of elementary expressions A library is
                 provided for differentiating of elementary functions.",
}


@phdthesis{Speelpenning:1980:CFP,
 author = {Speelpenning, Bert},
 title = {\href{https://archive.org/details/compilingfastpar1002spee}{Compiling fast partial derivatives of functions given by algorithms}},
 year = {1980},
 school = {University of Illinois at Urbana-Champaign},
 Qnote = {AAI8017989},
 Qaddress = {Champaign, IL, USA},
}

@book{Rall1981Automatic,
  title={Automatic Differentiation: Techniques and Applications},
  author={Louis B. Rall},
  Qisbn={9780387108612},
  Qlccn={81014439},
  Qseries={120//a},
  Qurl={https://books.google.com/books?id=HFRqQgAACAAJ},
  year={1981},
  publisher={Springer-Verlag}
}

@article{Pearlmutter2008RAF,
 author = {Pearlmutter, Barak A. and Siskind, Jeffrey Mark},
 title = {\href{http://www-bcl.cs.may.ie/~barak/papers/toplas-reverse.pdf}{Reverse-mode AD in a functional framework: Lambda the ultimate backpropagator}},
 journal = {ACM TOPLAS},
 issue_date = {March 2008},
 volume = {30},
 number = {2},
 month = mar,
 year = {2008},
 Qissn = {0164-0925},
 Qpages = {7:1--7:36},
 Qarticleno = {7},
 Qnumpages = {36},
 Qurl = {http://doi.acm.org/10.1145/1330017.1330018},
 Qdoi = {10.1145/1330017.1330018},
 Qacmid = {1330018},
 Qpublisher = {ACM},
 Qaddress = {New York, NY, USA},
 Qkeywords = {Closures, Jacobian, derivatives, forward-mode AD, higher-order AD, higher-order functional languages, program transformation, reflection},
} 

@inproceedings{Pearlmutter2007LMH,
 author = {Pearlmutter, Barak A. and Siskind, Jeffrey Mark},
 title = {\href{http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.73.7074}{Lazy multivariate higher-order forward-mode AD}},
 booktitle = {Proceedings of the 34th Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
 series = {POPL '07},
 year = {2007},
 Qisbn = {1-59593-575-4},
 Qlocation = {Nice, France},
 Qpages = {155--160},
 Qnumpages = {6},
 Qurl = {http://doi.acm.org/10.1145/1190216.1190242},
 Qdoi = {10.1145/1190216.1190242},
 Qacmid = {1190242},
 Qpublisher = {ACM},
 Qaddress = {New York, NY, USA},
 Qkeywords = {nonstandard interpretation, power series},
} 

@article{Karczmarczuk2001FunDif,
 author    = {Jerzy Karczmarczuk},
 title     = {\href{http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.31.8402}{Functional differentiation of computer programs}},
 journal   = {Higher-Order and Symbolic Computation},
 volume    = 14,
 number    = 1,
 year      = 2001,
 publisher = {Kluwer Academic Publishers},
 Qdoi = {http://dx.doi.org/10.1023/A:1011501232197},
 Qaddress = {Hingham, MA, USA},
 Qissn = {1388-3690},
 Qpages = {35--57},
}

@inproceedings{Karczmarczuk1999FunCoding,
  author = {Jerzy Karczmarczuk},
  title = {\href{http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.31.4684}{Functional coding of differential forms}},
  booktitle = {{Scottish} Workshop on Functional Programming},
  year = {1999},
  Qdoi = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.31.4684}
}

@misc{Karczmarczuk00adjointcodes,
    author = {Jerzy Karczmarczuk},
    title = {\href{http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.43.6836}{Adjoint codes in functional framework}},
    year = {2000}
}

% Unused
@inproceedings{Eaton2006STL,
 author = {Frederik Eaton},
 title = {\href{http://www.ofb.net/~frederik/stla/extabs.pdf}{Statically typed linear algebra in Haskell (extended abstract)}},
 booktitle = {Proceedings of the 2006 ACM SIGPLAN Workshop on Haskell},
 series = {Haskell '06},
 year = {2006},
 Qisbn = {1-59593-489-8},
 Qlocation = {Portland, Oregon, USA},
 Qpages = {120--121},
 Qnumpages = {2},
 Qurl = {http://doi.acm.org/10.1145/1159842.1159859},
 Qdoi = {10.1145/1159842.1159859},
 Qacmid = {1159859},
 Qpublisher = {ACM},
 Qaddress = {New York, NY, USA},
 Qkeywords = {existential types, higher-rank polymorphism, linear algebra, staging, template Haskell},
}

@incollection{Rumelhart1988backprop,
 author = {Rumelhart, David E. and Hinton, Geoffrey E. and Williams, Ronald J.},
 title = {Learning Representations by Back-propagating Errors},
 booktitle = {Neurocomputing: Foundations of Research},
 year = {1988},
 Qeditor = {Anderson, James A. and Rosenfeld, Edward},
 Qisbn = {0-262-01097-6},
 Qpages = {696--699},
 Qnumpages = {4},
 Qurl = {http://dl.acm.org/citation.cfm?id=65669.104451},
 Qacmid = {104451},
 publisher = {MIT Press},
 Qaddress = {Cambridge, MA, USA},
} 

@MastersThesis{Linnainmaa1970MS,
  author =       {Seppo Linnainmaa},
  title =        {The representation of the cumulative rounding error of an algorithm as a Taylor expansion of the local rounding errors},
  school =       {University of Helsinki},
  year =         1970}

@article{Wand80continuation-basedprogram,
    author = {Mitchell Wand},
    title = {Continuation-Based Program Transformation Strategies},
    journal = {Journal of the {ACM}},
    year = {1980},
    volume = {27},
    number = {1},
    pages = {164--180}
}
                  
@book{Awodey2010CT,
 author = {Awodey, Steve},
 title = {Category Theory},
 year = {2010},
 edition = {2nd},
 publisher = {Oxford University Press, Inc.},
 Qisbn = {0199237182, 9780199237180},
 Qaddress = {New York, NY, USA},
} 

@inproceedings{Reynolds72definitionalinterpreters,
    author = {John C. Reynolds},
    title = {\href{http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.110.5892}{Definitional interpreters for higher-order programming languages}},
    booktitle = {Reprinted from the proceedings of the 25th ACM National Conference},
    year = {1972},
    pages = {717--740},
    publisher = {ACM}
}
                  
@inproceedings{Danvy2001DW,
 author = {Danvy, Olivier and Nielsen, Lasse R.},
 title = {\href{http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.164.8417}{Defunctionalization at work}},
 booktitle = {Proceedings of the 3rd ACM SIGPLAN International Conference on Principles and Practice of Declarative Programming},
 series = {PPDP '01},
 year = {2001},
 pages = {162--174},
 Qisbn = {1-58113-388-X},
 Qlocation = {Florence, Italy},
 Qnumpages = {13},
 Qurl = {http://doi.acm.org/10.1145/773184.773202},
 Qdoi = {10.1145/773184.773202},
 Qacmid = {773202},
 Qpublisher = {ACM},
 Qaddress = {New York, NY, USA},
 Qkeywords = {CPS transformation, ML, Scheme, church encoding, closure conversion, continuation-passing style (CPS), continuations, defunctionalization, direct-style transformation, first-order programs, higher-order programs, lambda-lifting, regular expressions, supercombinator conversion, syntactic theories},
} 

@book{Riehl2016category,
  title={Category Theory in Context},
  author={Emily Riehl},
  year={2016},
  publisher={Dover Publications},
  Qisbn={9780486809038},
  Qlccn={2016498457},
  Qseries={Aurora: Dover Modern Math Originals},
  Qurl={https://books.google.com/books?id=YcLMjwEACAAJ},
}

@misc{Bradbury2016ARA,
  title={A Reverse-Mode Automatic Differentiation in Haskell Using the Accelerate Library},
  author={James Bradbury and F G Kathawala},
  year={2016}
}

@misc{Kmett2010AD,
  author = {Edward Kmett and Barak Pearlmutter and Jeffrey Mark Siskind},
  title = {The \emph{ad} package},
  year = 2010,
  howpublished = {\url{https://hackage.haskell.org/package/ad}},
  note = {Haskell library}
}

@inproceedings{PeytonJones99Stretching,
  author       = "Simon L. {Peyton Jones} and Simon Marlow and Conal Elliott",
  title        = {\href{http://citeseer.ist.psu.edu/peytonjones99stretching.html}{Stretching the storage manager: Weak pointers and stable names in Haskell}},
  booktitle    = "Implementation of Functional Languages",
  year         = "1999"
}

@inproceedings{Gill2009TOS,
 author = {Andy Gill},
 title = {\href{http://ku-fpg.github.io/papers/Gill-09-TypeSafeReification/}{Type-safe observable sharing in Haskell}},
 booktitle = {Proceedings of the 2Nd ACM SIGPLAN Symposium on Haskell},
 series = {Haskell '09},
 year = {2009},
 Qpages = {117--128},
 Qisbn = {978-1-60558-508-6},
 Qlocation = {Edinburgh, Scotland},
 Qnumpages = {12},
 Qurl = {http://doi.acm.org/10.1145/1596638.1596653},
 Qdoi = {10.1145/1596638.1596653},
 Qacmid = {1596653},
 Qpublisher = {ACM},
 Qaddress = {New York, NY, USA},
 Qkeywords = {DSL compilation, observable sharing},
}

@inproceedings{Kiselyov2004FPI,
 author = {Kiselyov, Oleg and Shan, Chung-chieh},
 title = {\href{http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.112.7819}{Functional pearl: Implicit configurations--or, type classes reflect the values of types}},
 booktitle = {Proceedings of the 2004 ACM SIGPLAN Workshop on Haskell},
 series = {Haskell '04},
 year = {2004},
 Qisbn = {1-58113-850-4},
 Qlocation = {Snowbird, Utah, USA},
 Qpages = {33--44},
 Qnumpages = {12},
 Qurl = {http://doi.acm.org/10.1145/1017472.1017481},
 Qdoi = {10.1145/1017472.1017481},
 Qacmid = {1017481},
 Qpublisher = {ACM},
 Qaddress = {New York, NY, USA},
 Qkeywords = {existential types, higher-rank polymorphism, implicit parameters, polymorphic recursion, type classes},
}

@book{Goodfellow2016DL,
    title={Deep Learning},
    author={Ian Goodfellow and Yoshua Bengio and Aaron Courville},
    publisher={MIT Press},
    Qnote={\url{http://www.deeplearningbook.org}},
    year={2016}
}

@Misc{Bolingbroke2011CK,
  author =    {Max Bolingbroke},
  title =     {Constraint kinds for {GHC}},
  howpublished = {blog post},
  month =     {sep},
  year =      2011,
  note =    {\url{http://blog.omega-prime.co.uk/2011/09/10/constraint-kinds-for-ghc/}}
}

@Misc{Olah2015NNTFP,
  author =    {Chris Olah},
  title =     {Neural Networks, Types, and Functional Programming},
  howpublished = {blog post},
  month =     {sep},
  year =      2015,
  note =      {\url{http://colah.github.io/posts/2015-09-NN-Types-FP/}}
}

@inproceedings{Chakravarty05AssociatedSynonyms,
    author = {Manuel M. T. Chakravarty and Gabriele Keller and Simon Peyton Jones},
    title = {\href{http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.646.7233}{Associated type synonyms}},
    booktitle = {{ICFP}},
    Qbooktitle = {In Proceedings of the Tenth ACM SIGPLAN International Conference on Functional Programming},
    year = {2005},
    Qpages = {241--253},
    Qpublisher = {ACM}
}

@book{Appel2007CC,
 author = {Appel, Andrew W.},
 title = {Compiling with Continuations},
 year = {2007},
 Qisbn = {052103311X},
 publisher = {Cambridge University Press},
 Qaddress = {New York, NY, USA},
} 

@inproceedings{Kennedy2007ContCont,
  author = {Kennedy, Andrew},
  title = {\href{https://www.microsoft.com/en-us/research/publication/compiling-with-continuations-continued/}{Compiling with Continuations, Continued}},
  booktitle = {ACM SIGPLAN International Conference on Functional Programming},
  year = 2007,
  month = {October},
  abstract = {We present a series of CPS-based intermediate languages suitable for functional language compilation, arguing that they have practical benefits over direct-style languages based on A-normal form (ANF) or monads. Inlining of functions demonstrates the benefits most clearly: in ANF-based languages, inlining involves a re-normalization step that rearranges let expressions and possibly introduces a new `join point' function, and in monadic languages, commuting conversions must be applied; in contrast, inlining in our CPS language is a simple substitution of variables for variables. We present a contification transformation implemented by simple rewrites on the intermediate language. Exceptions are modelled using so-called `double-barrelled' CPS. Subtyping on exception constructors then gives a very straightforward effect analysis for exceptions. We also show how a graph-based representation of CPS terms can be implemented extremely efficiently, with linear-time term simplification.},
  Qpublisher = {ACM Press},
}